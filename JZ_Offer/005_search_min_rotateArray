题目描述：
将一个非减数组（即对于任意i, a[i] <= a[i+1]，则a为非减数组)的前若干元素搬运拼接到数组末尾（[1,2,3,4,5] -> [3,4,5,1,2]),得到的即为旋转数组（可视为周期边界+旋转）。
输入一个旋转数组rotateArray，求其最小值。

思路：
易于想到用二分查找。前半部分的元素必然不小于array[left]而后半部分必然不小于array[right]，由此可以确定mid=(right+left)/2落在哪部分，从而决定如何缩小范围。
终止条件需要思考一会。
特殊情况：形如[3,3,3,3,3,3,3,3,3,3,0,1,2,3,3]或[3,3,0,1,2,3,3,3,3,3,3,3,3,3]均是合法的rotate array，但a[left]==a[mid]==a[right],因此无法判断出mid落在哪部分，需要做特殊处理（遇到此情况则顺序搜索）。

